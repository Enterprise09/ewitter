{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Eweet.js","components/EweetsFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setnewDisplayName","getMyEwwets","a","collection","where","uid","orderBy","get","eweets","console","log","docs","map","doc","value","useEffect","onSubmit","event","preventDefault","updateProfile","className","type","placeholder","onChange","target","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Eweet","eweetObj","isOwner","editing","setEditing","text","newEweet","setNewEweet","onDeleteClick","ok","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","faWindowClose","src","width","height","visibility","faTrash","faEdit","EweetFactory","eweet","setEweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","setEweets","onSnapshot","snapshot","eweetArray","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAoBAA,IAASC,cAfc,CAQrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAIF,IAAMC,EAAmBR,IAEnBS,EAAcT,IAASU,OAEvBC,EAAYX,IAASY,YAErBC,EAAiBb,IAASc,U,eCvBxB,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACvBC,EAAUC,cAChB,EAA4CC,mBAASH,EAAQI,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAAW,uCAAG,4BAAAC,EAAA,sEACGb,EAClBc,WAAW,UACXC,MAAM,YAAa,KAAMV,EAAQW,KACjCC,QAAQ,YACRC,MALe,OACZC,EADY,OAMlBC,QAAQC,IAAIF,EAAOG,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,UANvB,2CAAH,qDAQjBC,qBAAU,WACRd,MACC,IACH,IAMMe,EAAQ,uCAAG,WAAOC,GAAP,SAAAf,EAAA,yDACfe,EAAMC,iBACFxB,EAAQI,cAAgBC,EAFb,gCAGPL,EAAQyB,cAAc,CAC1BrB,YAAaC,IAJF,OAMbN,IANa,2CAAH,sDASd,OACE,mCACE,uBAAM2B,UAAU,eAAeJ,SAAUA,EAAzC,UACE,uBACEI,UAAU,qBACVC,KAAK,OACLC,YAAY,eACZC,SAtBS,SAACN,GAChB,IACYH,EACRG,EADFO,OAAUV,MAEZd,EAAkBc,IAmBZA,MAAOf,IAET,uBACEqB,UAAU,uBACVC,KAAK,SACLP,MAAM,mBAER,qBAAKM,UAAU,eACf,wBAAQA,UAAU,oBAAoBK,QA9CtB,WACpBtC,EAAYuC,UACZ/B,EAAQgC,KAAK,MA4CT,2BCqBOC,G,MAvEE,WACf,MAA0B/B,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAgCjC,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAAoCnC,oBAAS,GAA7C,mBAAOoC,EAAP,KAAmBC,EAAnB,KACA,EAA0BrC,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACMb,EAAW,SAACN,GAChB,MAEIA,EADFO,OAAUa,EADZ,EACYA,KAAMvB,EADlB,EACkBA,MAEL,UAATuB,EACFP,EAAShB,GACS,aAATuB,GACTL,EAAYlB,IAGVE,EAAQ,uCAAG,WAAOC,GAAP,eAAAf,EAAA,yDACfe,EAAMC,iBADS,UAITe,EAJS,gCAKE9C,EAAYmD,+BACvBT,EACAE,GAPS,OAKXQ,EALW,+CAUEpD,EAAYqD,2BAA2BX,EAAOE,GAVhD,QAUXQ,EAVW,eAYb9B,QAAQC,IAAI6B,GAZC,kDAcbH,EAAS,KAAMK,SAdF,0DAAH,sDAmBd,OACE,qCACE,uBAAMrB,UAAU,YAAYJ,SAAUA,EAAtC,UACE,uBACEI,UAAU,aACViB,KAAK,QACLhB,KAAK,QACLC,YAAY,QACZoB,UAAQ,EACR5B,MAAOe,EACPN,SAAUA,IAEZ,uBACA,uBACEH,UAAU,aACViB,KAAK,WACLhB,KAAK,WACLC,YAAY,WACZoB,UAAQ,EACR5B,MAAOiB,EACPR,SAAUA,IAEZ,uBACA,uBACEH,UAAU,cACVC,KAAK,SACLP,MAAOmB,EAAa,iBAAmB,YAExCE,GAAS,sBAAMf,UAAU,aAAhB,SAA8Be,OAE1C,sBAAMf,UAAU,cAAcK,QA/BZ,kBAAMS,GAAc,SAACS,GAAD,OAAWA,MA+BjD,SACGV,EAAa,UAAY,wB,wBCfnBW,EA3CF,WACX,IAAMC,EAAa,uCAAG,WAAO5B,GAAP,iBAAAf,EAAA,4DAKP,YAHDmC,EACRpB,EADFO,OAAUa,MAIVS,EAAW,IAAI5D,EAAiBE,KAAK2D,mBACnB,WAATV,IACTS,EAAW,IAAI5D,EAAiBE,KAAK4D,oBARnB,SAUd7D,EAAY8D,gBAAgBH,GAVd,2CAAH,sDAanB,OACE,sBAAK1B,UAAU,gBAAf,UACE,cAAC,IAAD,CACE8B,KAAMC,IACNC,MAAO,0BACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKnC,UAAU,WAAf,UACE,yBACEA,UAAU,oBACViB,KAAK,SACLZ,QAASoB,EAHX,kCAKuB,cAAC,IAAD,CAAiBK,KAAMM,SAE9C,yBACEpC,UAAU,oBACViB,KAAK,SACLZ,QAASoB,EAHX,kCAKuB,cAAC,IAAD,CAAiBK,KAAMO,gB,gBCkEvCC,G,MArGD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8B/D,oBAAS,GAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KACA,EAAgCjE,mBAAS8D,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,4BAAAhE,EAAA,yDACdiE,EAAKC,OAAOC,QAAQ,+CAC1B5D,QAAQC,IAAIyD,IACRA,EAHgB,gCAIZ9E,EAAUwB,IAAV,iBAAwB8C,EAASW,KAAMC,SAJ3B,uBAKZhF,EAAeiF,WAAWb,EAASc,eAAeF,SALtC,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAC5C3B,EAAQ,uCAAG,WAAOC,GAAP,SAAAf,EAAA,6DACfe,EAAMC,iBACNT,QAAQC,IAAIiD,EAAUK,GAFP,SAGT3E,EAAUwB,IAAV,iBAAwB8C,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAJO,OAMfF,GAAW,GANI,2CAAH,sDAcd,OACE,8BACGD,EACC,mCACGD,GACC,mCACE,qBAAKxC,UAAU,uBAAf,SACE,uBAAMA,UAAU,kBAAkBJ,SAAUA,EAA5C,UACE,uBACEI,UAAU,uBACVG,SAhBD,SAACN,GAChB,IACYH,EACRG,EADFO,OAAUV,MAEZmD,EAAYnD,IAaIO,KAAK,OACLC,YAAY,iBACZR,MAAOkD,EACPtB,UAAQ,IAEV,sBAAKtB,UAAU,YAAf,UACE,uBACEA,UAAU,mBACVC,KAAK,SACLP,MAAM,WAER,wBACEM,UAAU,mBACVK,QAASiD,EAFX,SAIE,cAAC,IAAD,CAAiBxB,KAAM0B,IAAexB,MAAM,uBAS1D,mCACE,qBAAKhC,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8BuC,EAASI,OACtCJ,EAASc,cACR,qBACErD,UAAU,YACVyD,IAAKlB,EAASc,cACdK,MAAM,OACNC,OAAO,SAGT,qBACE3D,UAAU,YACVyD,IAAKlB,EAASc,cACdK,MAAM,OACNC,OAAO,OACPzB,MAAO,CAAE0B,WAAY,YAGxBpB,GACC,mCACE,sBAAKxC,UAAU,cAAf,UACE,wBAAQA,UAAU,gBAAgBK,QAASyC,EAA3C,SACE,cAAC,IAAD,CAAiBhB,KAAM+B,IAAS7B,MAAM,WAExC,wBAAQhC,UAAU,gBAAgBK,QAASiD,EAA3C,SACE,cAAC,IAAD,CAAiBxB,KAAMgC,IAAQ9B,MAAM,2B,QCV5C+B,G,MAlFM,SAAC,GAAiB,IAAfzF,EAAc,EAAdA,QACtB,EAA0BG,mBAAS,IAAnC,mBAAOuF,EAAP,KAAcC,EAAd,KACA,EAAoCxF,mBAAS,IAA7C,mBAAOyF,EAAP,KAAmBC,EAAnB,KACMvE,EAAQ,uCAAG,WAAOC,GAAP,qBAAAf,EAAA,yDACfe,EAAMC,iBACFuD,EAAgB,GACD,KAAfa,EAHW,wBAIPE,EAAgBjG,EACnBkG,MACAC,MAFmB,UAEVhG,EAAQW,IAFE,YAEKsF,gBANd,SAOUH,EAAcI,UAAUN,EAAY,YAP9C,cAOPO,EAPO,gBAQSA,EAASJ,IAAIK,iBARtB,OAQbrB,EARa,sBAUTd,EAAW,CACfI,KAAMqB,EACNW,SAAUC,KAAKC,MACfC,UAAWxG,EAAQW,IACnBoE,iBAda,UAgBTpF,EAAUc,WAAW,UAAUgG,IAAIxC,GAhB1B,QAiBf0B,EAAS,IACTE,EAAc,IAlBC,4CAAH,sDAyCd,OACE,qBAAKnE,UAAU,0BAAf,SACE,uBAAMA,UAAU,qBAAqBJ,SAAUA,EAA/C,UACE,sBAAKI,UAAU,sBAAf,UACE,uBACEA,UAAU,eACVN,MAAOsE,EACP7D,SA5BO,SAACN,GAChB,IACYH,EACRG,EADFO,OAAUV,MAEZuE,EAASvE,IAyBDO,KAAK,OACLC,YAAY,sBACZ8E,UAAW,MAEb,uBAAOhF,UAAU,gBAAgBC,KAAK,SAASP,MAAM,cAEvD,wBAAOM,UAAU,oBAAoBiF,IAAI,cAAcvF,MAAM,SAA7D,UACE,8CADF,IAC0B,cAAC,IAAD,CAAiBoC,KAAMoD,SAEjD,uBACElF,UAAU,kBACVkD,GAAG,cACHjD,KAAK,OACLkF,OAAO,UACPhF,SArCa,SAACN,GACpB,IAGMuF,EADFvF,EADFO,OAAUiF,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBvB,EAAcuB,IAEhBJ,EAAOM,cAAcR,MA2BhBlB,GACC,sBAAKlE,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAgByD,IAAKS,IACpC,wBAAQlE,UAAU,iBAAiBK,QA5BnB,kBAAM8D,EAAc,KA4BpC,mCC9CG0B,G,MA3BF,SAAC,GAAiB,IAAfvH,EAAc,EAAdA,QACd,EAA4BG,mBAAS,IAArC,mBAAOW,EAAP,KAAe0G,EAAf,KAUA,OATAnG,qBAAU,WACR1B,EAAUc,WAAW,UAAUgH,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASzG,KAAKC,KAAI,SAACC,GAAD,oBACnCyD,GAAIzD,EAAIyD,IACLzD,EAAI0B,WAET2E,EAAUG,QAEX,IAED,sBAAKjG,UAAU,iBAAf,UACE,cAAC,EAAD,CAAc1B,QAASA,IACvB,8BACGc,EAAOI,KAAI,SAACwE,GAAD,OACV,cAAC,EAAD,CAEEzB,SAAUyB,EACVxB,QAASwB,EAAMc,YAAcxG,EAAQW,KAFhC+E,EAAMd,c,QCaRgD,G,MA7BI,SAAC,GAAD,EAAG5H,QAAH,OACjB,qBAAK0B,UAAU,MAAf,SACE,+BACE,oBAAIA,UAAU,aACd,6BACE,cAAC,IAAD,CAAMmG,GAAG,IAAT,SACE,cAAC,IAAD,CACEnG,UAAU,WACV8B,KAAMC,IACNC,MAAO,oBACPC,KAAK,WAIX,6BACE,cAAC,IAAD,CAAMjC,UAAU,eAAemG,GAAG,WAAlC,SACE,cAAC,IAAD,CACEnG,UAAU,WACV8B,KAAMsE,IACNpE,MAAO,oBACPC,KAAK,WAIX,oBAAIjC,UAAU,oBCCLqG,EAzBG,SAAC,GAA0C,IAAxChI,EAAuC,EAAvCA,YAAaiI,EAA0B,EAA1BA,WAAYhI,EAAc,EAAdA,QAC5C,OAEE,cADA,CACC,IAAD,WACGgI,GAAc,cAAC,EAAD,CAAYhI,QAASA,IACpC,cAAC,IAAD,UACGgI,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMlI,QAASA,MAEjB,cAAC,IAAD,CAAOiI,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASlI,QAASA,EAASD,YAAaA,SAI5C,cAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,Y,MCuBGC,MA1Cf,WACE,MAAwBhI,oBAAS,GAAjC,mBAAOiI,EAAP,KAAaC,EAAb,KACA,EAA8BlI,mBAAS,MAAvC,mBAAOH,EAAP,KAAgBsI,EAAhB,KAuBA,OAtBAjH,qBAAU,WACR5B,EAAY8I,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTpI,YAAaoI,EAAKpI,YAClBO,IAAK6H,EAAK7H,IACVc,cAAe,SAACgH,GAAD,OAAUD,EAAK/G,cAAcgH,KAGnC,MAEbJ,GAAQ,QAET,IAUD,qBAAK3G,UAAU,MAAf,SACE,mCACG0G,EACC,cAAC,EAAD,CACErI,YAbU,WAClB,IAAMyI,EAAO/I,EAAYiJ,YACzBJ,EAAW,CACTlI,YAAaoI,EAAKpI,YAClBO,IAAK6H,EAAK7H,IACVc,cAAe,SAACgH,GAAD,OAAUD,EAAK/G,cAAcgH,OAStCT,WAAYhI,EACZA,QAASA,IAGX,2BCpCV2I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f245ac40.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  //invalid apiKey error, but Why?\r\n  //apiKey: process.env.REACT_APP_API_KEY,\r\n  // authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  // projectId: process.env.REACT_APP_PROJECT_ID,\r\n  // storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  // messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  // appId: process.env.REACT_APP_APP_ID,\r\n  apiKey: \"AIzaSyDu3hLlfvGQph98ZYb26l5zQ97MX2iGOr8\",\r\n  authDomain: \"ewitter-c0071.firebaseapp.com\",\r\n  projectId: \"ewitter-c0071\",\r\n  storageBucket: \"ewitter-c0071.appspot.com\",\r\n  messagingSenderId: \"412684830118\",\r\n  appId: \"1:412684830118:web:58e6c9ec525ab6fce97b67\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/Profile.css\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setnewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\"); //redirect to home\r\n  };\r\n  const getMyEwwets = async () => {\r\n    const eweets = await dbService\r\n      .collection(\"eweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createAt\")\r\n      .get();\r\n    console.log(eweets.docs.map((doc) => doc.value));\r\n  };\r\n  useEffect(() => {\r\n    getMyEwwets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setnewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"profile_form\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"profile_input_text\"\r\n          type=\"text\"\r\n          placeholder=\"Display Name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n        />\r\n        <input\r\n          className=\"profile_input_submit\"\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n        />\r\n        <div className=\"solid_line\" />\r\n        <button className=\"profile_logoutBtn\" onClick={onLogOutClick}>\r\n          Log Out\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"../css/AuthForm.css\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form className=\"container\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"auth_input\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"auth_input\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"auth_submit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"auth_error\">{error}</span>}\r\n      </form>\r\n      <span className=\"auth_switch\" onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Auth.css\";\r\nimport {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"AuthContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"rgba(138, 65, 255, 0.8)\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button\r\n          className=\"social_btn_google\"\r\n          name=\"google\"\r\n          onClick={onSocialClick}\r\n        >\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button\r\n          className=\"social_btn_github\"\r\n          name=\"github\"\r\n          onClick={onSocialClick}\r\n        >\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import {\r\n  faBackspace,\r\n  faClosedCaptioning,\r\n  faEdit,\r\n  faTrash,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"../css/Eweet.css\";\r\n\r\nconst Eweet = ({ eweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newEweet, setNewEweet] = useState(eweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this eweet?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`eweets/${eweetObj.id}`).delete();\r\n      await storageService.refFromURL(eweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(eweetObj, newEweet);\r\n    await dbService.doc(`eweets/${eweetObj.id}`).update({\r\n      text: newEweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewEweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <div className=\"eweet_form_container\">\r\n                <form className=\"eweet_edit_form\" onSubmit={onSubmit}>\r\n                  <input\r\n                    className=\"eweet_edit_textInput\"\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Edit you eweet\"\r\n                    value={newEweet}\r\n                    required\r\n                  />\r\n                  <div className=\"edit_btns\">\r\n                    <input\r\n                      className=\"eweetForm_submit\"\r\n                      type=\"submit\"\r\n                      value=\"&rarr;\"\r\n                    />\r\n                    <button\r\n                      className=\"eweetForm_cancel\"\r\n                      onClick={toggleEditing}\r\n                    >\r\n                      <FontAwesomeIcon icon={faWindowClose} color=\"grey\" />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"eweet_boxs\">\r\n            <div className=\"eweet_box\">\r\n              <span className=\"eweet_text\">{eweetObj.text}</span>\r\n              {eweetObj.attachmentUrl ? (\r\n                <img\r\n                  className=\"eweet_img\"\r\n                  src={eweetObj.attachmentUrl}\r\n                  width=\"50px\"\r\n                  height=\"50px\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  className=\"eweet_img\"\r\n                  src={eweetObj.attachmentUrl}\r\n                  width=\"50px\"\r\n                  height=\"50px\"\r\n                  style={{ visibility: \"hidden\" }}\r\n                />\r\n              )}\r\n              {isOwner && (\r\n                <>\r\n                  <div className=\"iconBtn_box\">\r\n                    <button className=\"eweet_iconBtn\" onClick={onDeleteClick}>\r\n                      <FontAwesomeIcon icon={faTrash} color=\"grey\" />\r\n                    </button>\r\n                    <button className=\"eweet_iconBtn\" onClick={toggleEditing}>\r\n                      <FontAwesomeIcon icon={faEdit} color=\"grey\" />\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Eweet;\r\n","import { faClosedCaptioning } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faPlus, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../css/EweetsFactory.css\";\r\n\r\nconst EweetFactory = ({ userObj }) => {\r\n  const [eweet, setEweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const eweetObj = {\r\n      text: eweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"eweets\").add(eweetObj);\r\n    setEweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <div className=\"eweetsfactory_container\">\r\n      <form className=\"eweetsfactory_form\" onSubmit={onSubmit}>\r\n        <div className=\"eweets_inputTextBox\">\r\n          <input\r\n            className=\"eweets_input\"\r\n            value={eweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind\"\r\n            maxLength={120}\r\n          />\r\n          <input className=\"eweets_submit\" type=\"submit\" value=\"&rarr;\" />\r\n        </div>\r\n        <label className=\"attach_file_label\" for=\"attach-file\" value=\"&rarr;\">\r\n          <span>Add photos</span> <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          className=\"eweets_photoBtn\"\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n        />\r\n        {attachment && (\r\n          <div className=\"preview_photo_box\">\r\n            <img className=\"preview_photo\" src={attachment} />\r\n            <button className=\"photo_clearBtn\" onClick={onClearAttachment}>\r\n              Clear Photo\r\n              {/* <FontAwesomeIcon icon={faWindowClose} color=\"grey\" /> */}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EweetFactory;\r\n","import Eweet from \"components/Eweet\";\r\nimport EweetFactory from \"components/EweetsFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../css/Home.css\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [eweets, setEweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"eweets\").onSnapshot((snapshot) => {\r\n      const eweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setEweets(eweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"home_container\">\r\n      <EweetFactory userObj={userObj} />\r\n      <div>\r\n        {eweets.map((eweet) => (\r\n          <Eweet\r\n            key={eweet.id}\r\n            eweetObj={eweet}\r\n            isOwner={eweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Navigation.css\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav className=\"nav\">\r\n    <ul>\r\n      <li className=\"empty_li\"></li>\r\n      <li>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon\r\n            className=\"nav_icon\"\r\n            icon={faTwitter}\r\n            color={\"rgb(138, 65, 255)\"}\r\n            size=\"2x\"\r\n          />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"profile_link\" to=\"/profile\">\r\n          <FontAwesomeIcon\r\n            className=\"nav_icon\"\r\n            icon={faUser}\r\n            color={\"rgb(138, 65, 255)\"}\r\n            size=\"2x\"\r\n          />\r\n        </Link>\r\n      </li>\r\n      <li className=\"empty_li\"></li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    //use HashRouter for github page upload\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport \"../css/App.css\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <>\r\n        {init ? (\r\n          <AppRouter\r\n            refreshUser={refreshUser}\r\n            isLoggedIn={userObj}\r\n            userObj={userObj}\r\n          />\r\n        ) : (\r\n          \"Initializing . . . \"\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}